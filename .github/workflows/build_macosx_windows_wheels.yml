name: Build Mac OS X & Windows wheels and upload to PyPI upon release

# Update on when VERSION changes
on:
  push:
    branches:    
      - master
    paths:
      - 'VERSION'
  pull_request:
    branches:    
      - master
    paths:
      - 'VERSION'

jobs:
  build:
    name: Build wheels
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest,windows-latest]
        python-version: [3.6,3.7, 3.8]
    steps:
      # check-out this repository
      - uses: actions/checkout@v2
      # Install Miniconda, as specificed by this repository's environment.yml
      - uses: goanpeca/setup-miniconda@v1
        with:
           activate-environment: tensorwheels
           environment-file: .github/conda-build-environment-${{ matrix.os }}.yml
           python-version: ${{ matrix.python-version }}
      - name: Install pip dependencies
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          pip install wheel numpy==1.19.2 cython==3.0a1
      - name: Build wheel
        shell: bash -l {0}
        run: python setup.py sdist bdist_wheel
      # Upload wheel as artifact
      - uses: actions/upload-artifact@v2-preview
        with:
          name: tensorstate-${{ matrix.python-version }}-${{ matrix.os }}
          path: dist/*.whl

# We need to run on Ubuntu for pypa/gh-action-pypi-publish action
# so might as well also combine
  combine:
    name: Combine wheels into single artifact and upload to PyPI upon release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: |
          mkdir tmp_wheelhouse
          mkdir wheelhouse
      - uses: actions/download-artifact@v2-preview
        with:
          path: tmp_wheelhouse/
      - run: find tmp_wheelhouse/ -mindepth 2 -type f -exec mv -i '{}' wheelhouse/ ';'
      - uses: actions/upload-artifact@v2-preview
        with:
          name: tensorstate-wheels-macos-windows-latest
          path: dist/*.whl
      # Upload to PyPI if this is a release
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.pypi_user }}
          password: ${{ secrets.pypi_pass }}
          packages_dir: wheelhouse/
